{"ast":null,"code":"var _jsxFileName = \"D:\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm(props) {\n  _s();\n\n  // current state , updated state\n  const [enteredTitle, setenteredTitle] = useState('');\n  const [enteredAmount, setenteredAmount] = useState('');\n  const [enteredDate, setenteredDate] = useState('');\n\n  const titleChangeHandler = event => {\n    setenteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setenteredAmount(event.target.value); // console.log(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setenteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); // blocks the page for reloading and continues with default javascript behaviour\n\n    const expenseData = {\n      id: Math.random(),\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    props.onSaveExpenseData(expenseData); // sb se pahly yeh ha transfering data to child to parent or component UP transfer\n    // prop pass krwaya uske baad jo data transfer krwana wo parametrize krwaya \n    // jo data apne parent me use krna uska eik data prop bnana or usko yeh value deni ha \n\n    setenteredTitle(''); // we set all the value to deafault empty coz after input submission we want it empty\n\n    setenteredAmount('');\n    setenteredDate(''); // two way binding gathers the user input and also change it (in forms React as i done.)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler,\n          value: enteredAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler,\n          value: enteredDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"new-expense__actions\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"ttILH0lPRXYszohiiASyfwPuvsE=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["D:/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setenteredTitle","enteredAmount","setenteredAmount","enteredDate","setenteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","id","Math","random","title","amount","date","Date","console","log","onSaveExpenseData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nfunction ExpenseForm(props) {\r\n         // current state , updated state\r\n  const [enteredTitle, setenteredTitle] = useState('');\r\n  const [enteredAmount, setenteredAmount] = useState('');\r\n  const [enteredDate, setenteredDate] = useState('');\r\n  \r\n  const titleChangeHandler = (event) => {\r\n    setenteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setenteredAmount(event.target.value);\r\n    // console.log(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setenteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) =>{\r\n      event.preventDefault(); // blocks the page for reloading and continues with default javascript behaviour\r\n        const expenseData = {\r\n            id : Math.random(),\r\n            title : enteredTitle,\r\n            amount : enteredAmount,\r\n            date : new Date (enteredDate)\r\n        };\r\n        console.log(expenseData);\r\n        props.onSaveExpenseData(expenseData); // sb se pahly yeh ha transfering data to child to parent or component UP transfer\r\n                                              // prop pass krwaya uske baad jo data transfer krwana wo parametrize krwaya \r\n                                              // jo data apne parent me use krna uska eik data prop bnana or usko yeh value deni ha \r\n\r\n        setenteredTitle('')    // we set all the value to deafault empty coz after input submission we want it empty\r\n        setenteredAmount('')\r\n        setenteredDate('')    // two way binding gathers the user input and also change it (in forms React as i done.)\r\n        \r\n        \r\n        \r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      \r\n      \r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          ></input>{\" \"}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" className=\"new-expense__actions\">\r\n          Add Expense\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default ExpenseForm;\r\n"]},"metadata":{},"sourceType":"module"}